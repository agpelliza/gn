#!/usr/bin/env ruby

require_relative "../lib/gn"

require "clap"
require "fileutils"

module CLI
  README  = File.expand_path("../README", File.dirname(__FILE__))
  GN_HOME = File.join(ENV["HOME"], ".gn")

  # Display the README message and exit.
  def self.help
    exec "${PAGER:-less} #{README}"
  end

  def self.install(template)

    # Create directory for templates if it doesn't exist.
    FileUtils.mkdir_p(GN_HOME)

    # Clone the template repository.
    Dir.chdir(GN_HOME) do
      exec "git clone %s" % template
    end
  end
end

# Display the README if there are no arguments.
CLI.help if ARGV.empty?

rest = Clap.run ARGV,
  "-h"      => CLI.method(:help),
  "--help"  => CLI.method(:help)

rest = Clap.run rest,
  "-i"        => CLI.method(:install),
  "--install" => CLI.method(:install)

rest.each do |name|
  gn = Gn.new(name)

  # Load edited plan.
  gn.load!

  # Process each blueprint.
  gn.blueprints.each do |blueprint|

    # Create destination directory.
    FileUtils.mkdir_p(File.dirname(blueprint.destination))

    # Write generated template.
    File.open(blueprint.destination, "w") do |file|
      file.write blueprint.render
    end
  end
end
