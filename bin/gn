#!/usr/bin/env ruby
require 'mote'
require 'fileutils'
require 'tempfile'

class Gn

  attr_reader :name

  def initialize(name)
    @name = name
    run
  end

  def run
    load_plan
    Plan.constants.each do |constant|
      blueprint = Plan.const_get(constant).new
      template = File.join(templates_location, "#{constant.to_s.downcase}.mote")
      FileUtils.mkdir_p(File.dirname(blueprint.destination))
      File.open(blueprint.destination, "w") do |f|
        f.write Mote.parse(File.read(template), blueprint).call
      end
    end
  end

  def location
    @location ||= [name, "./plans/#{name}", "#{ENV['HOME']}.plans/#{name}"].detect do |path|
      Dir.exists?(path)
    end
  end

  def templates_location
    File.join(@location, "templates")
  end

  def load_plan
    file = Tempfile.new('plan_init')
    file.write(File.read(File.join(location, "init.rb")))
    file.close
    open_with_editor(file)
    load file.path
  end

  def open_with_editor(file)
    editor = ENV['EDITOR'] || "vi"
    system("#{editor} #{file.path}")
  end
  
end

Gn.new(ARGV.first)
